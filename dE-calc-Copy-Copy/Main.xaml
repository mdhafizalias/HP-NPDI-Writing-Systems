<Activity mc:Ignorable="sap sap2010" x:Class="Main" VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="682.6666666666666,6687.333333333333" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:si="clr-namespace:System.IO;assembly=System.Private.CoreLib" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uix="http://schemas.uipath.com/workflow/activities/uix" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="78">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Activities.System.Binding</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Word</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Presentations</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.UIAutomationNext.Activities.Models</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.UIAutomationNext.Contracts</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="59">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Word.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Presentations</AssemblyReference>
      <AssemblyReference>UiPath.Presentations.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <ueab:SequenceX DisplayName="Single Excel Process Scope" sap:VirtualizedContainerService.HintSize="692.6666666666666,6622.666666666667" sap2010:WorkflowViewState.IdRef="SequenceX_1">
    <ueab:SequenceX.Variables>
      <Variable x:TypeArguments="ue:IWorkbookQuickHandle" Default="[new WorkbookQuickHandle(workbookPath:=&quot;Project_Notebook.xlsx&quot;,visible:=True,autoSave:=False,createNew:=True,readOnly:=False,isWorkspace:=True)]" Name="Notes" />
      <Variable x:TypeArguments="x:String" Name="SelectedFile_from_Browse_For_File" />
      <Variable x:TypeArguments="si:FileInfo" Name="Output_to_from_Get_File_Info_2" />
      <Variable x:TypeArguments="x:String" Name="ReferenceSheet_Name" />
      <Variable x:TypeArguments="x:String" Name="Sample" />
      <Variable x:TypeArguments="si:FileInfo" Name="Output_to_from_Get_File_Info_1" />
      <Variable x:TypeArguments="x:String" Name="SampleSheet_Name" />
      <Variable x:TypeArguments="x:String" Name="Reference" />
    </ueab:SequenceX.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="Group" sap:VirtualizedContainerService.HintSize="650.6666666666666,3024" sap2010:WorkflowViewState.IdRef="Sequence_5">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="520,86.66666666666667" sap2010:WorkflowViewState.IdRef="MessageBox_3" Text="[string.Format(&quot;Select the raw data file for REFERENCE colour ramp plot.&quot;)]" />
      <ui:SelectFile DisplayName="Browse For File" Filter="All files (*.*)|*.*" sap:VirtualizedContainerService.HintSize="520,141.33333333333334" sap2010:WorkflowViewState.IdRef="SelectFile_2" SelectedFile="[SelectedFile_from_Browse_For_File]" />
      <ui:GetFileInfoX DisplayName="Get File Info" FilePath="[SelectedFile_from_Browse_For_File]" sap:VirtualizedContainerService.HintSize="520,136.66666666666666" sap2010:WorkflowViewState.IdRef="GetFileInfoX_1" Output="[Output_to_from_Get_File_Info_1]" />
      <Assign DisplayName="Set Variable Value" sap:VirtualizedContainerService.HintSize="520,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_1">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[ReferenceSheet_Name]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Output_to_from_Get_File_Info_1.Name.Substring(0,9)]</InArgument>
        </Assign.Value>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Assign>
      <Assign DisplayName="Set Variable Value" sap:VirtualizedContainerService.HintSize="520,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_2">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[Reference]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[SelectedFile_from_Browse_For_File]</InArgument>
        </Assign.Value>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Assign>
      <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" AutoSave="False" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="520,912" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="None" WorkbookPath="[SelectedFile_from_Browse_For_File]">
        <ueab:ExcelApplicationCard.Body>
          <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="TextToColumn" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="486,631.3333333333334" sap2010:WorkflowViewState.IdRef="Sequence_2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ueab:TextToColumnsX NumberOfCharactersPerColumn="{x:Null}" ConsecutiveOperatorsAsOne="True" DestinationRange="[TextToColumn.Sheet(ReferenceSheet_Name).Range(&quot;A1:A565&quot;)]" DisplayName="Text to Columns" sap:VirtualizedContainerService.HintSize="444,329.3333333333333" sap2010:WorkflowViewState.IdRef="TextToColumnsX_2" OtherSeparator="|" ParsingType="Delimited" SourceRange="[TextToColumn.Sheet(ReferenceSheet_Name).Range(&quot;A1:A565&quot;)]" SplitByComma="False" SplitByLineBreak="False" SplitByOther="True" SplitBySemicolon="True" SplitBySpace="True" SplitByTabs="True" TextQualifier="None" />
              <ueab:ReadRangeX DisplayName="Read Range" HasHeaders="False" sap:VirtualizedContainerService.HintSize="444,174.66666666666666" sap2010:WorkflowViewState.IdRef="ReadRangeX_1" Range="[TextToColumn.Sheet(ReferenceSheet_Name).Range(&quot;A25:G564&quot;)]" SaveTo="[ClipboardX.DataTableValue]" VisibleOnly="False" />
            </Sequence>
          </ActivityAction>
        </ueab:ExcelApplicationCard.Body>
      </ueab:ExcelApplicationCard>
      <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" AutoSave="False" CreateNewFile="False" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="520,1226" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_4" KeepExcelFileOpen="True" ResizeWindow="Maximize" WorkbookPath="[string.Format(&quot;{0}\Downloads\Copy of dE-calculations.xlsx&quot;, Environment.GetFolderPath(Environment.SpecialFolder.UserProfile))]">
        <ueab:ExcelApplicationCard.Body>
          <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="476,945.3333333333334" sap2010:WorkflowViewState.IdRef="Sequence_11">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ueab:DuplicateSheetX DisplayName="Duplicate Sheet" sap:VirtualizedContainerService.HintSize="434,141.33333333333334" sap2010:WorkflowViewState.IdRef="DuplicateSheetX_2" NewSheetName="Reference" SheetToDuplicate="[Excel.Sheet(&quot;Format&quot;)]" />
              <ueab:CopyPasteRangeX DestinationRange="[Excel.Sheet(&quot;Reference&quot;).Range(&quot;A1&quot;)]" DisplayName="Copy/Paste Range" sap:VirtualizedContainerService.HintSize="434,218.66666666666666" sap2010:WorkflowViewState.IdRef="CopyPasteRangeX_3" PasteOptions="All" SourceRange="[ExcelClipboardX.Value]" Transpose="False" />
              <ueab:CopyPasteRangeX DestinationRange="[Excel.Sheet(&quot;dE&quot;).Range(&quot;B7&quot;)]" DisplayName="Copy/Paste Range" sap:VirtualizedContainerService.HintSize="434,218.66666666666666" sap2010:WorkflowViewState.IdRef="CopyPasteRangeX_9" PasteOptions="Values" SourceRange="[Excel.Sheet(&quot;Reference&quot;).Range(&quot;K2:AT21&quot;)]" Transpose="False" />
              <uix:NClick ClickType="Single" DisplayName="Click 'dE'" sap:VirtualizedContainerService.HintSize="434,159.33333333333334" sap2010:WorkflowViewState.IdRef="NClick_1" InScope="[Excel]" KeyModifiers="None" MouseButton="Left" ScopeIdentifier="Excel" Version="V3">
                <uix:NClick.Target>
                  <uix:TargetAnchorable DesignTimeRectangle="129, 978, 47, 34" DesignTimeScaleFactor="1.5" FriendlyName="'dE'" FullSelectorArgument="&lt;uia automationid='Copy of dE-calculations.xlsx' cls='ExcelBookTabControl' name='Copy of dE-calculations' /&gt;&lt;uia automationid='SheetTab' name='dE' role='Sheet Tab' /&gt;" FuzzySelectorArgument="&lt;uia automationid='Copy of dE-calculations.xlsx' cls='ExcelBookTabControl' name='Copy of dE-calculations' /&gt;&lt;uia automationid='SheetTab' name='dE' role='Sheet Tab' check:fulltext='dE' /&gt;" Guid="0342f7de-7ab7-4def-b5bb-b2515b6820b1" ImageBase64="iVBORw0KGgoAAAANSUhEUgAAADMAAAAmCAYAAABpuqMCAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAAFiUAABYlAUlSJPAAAAEkSURBVFhH7ZbRjYMwDIZZ6+72YQ+PwYPXsCqd1BXywg4Z42/g0hKubgVVWhIrlj4JEYj8QeykwxtjHMd49ZmwJTMMA6zQ9X0PKzSZUrnJTGsuHaiJa+5NpjTeL8Nu7v2OlbHMHCNDAj/fVcILKH1/B4fKeCdg5n/Q+v0dHCsjryeu0WR0CCwuqQUfkmVQfTIEiRZLHQjcYlaPDEWTVcIzi6Qmo8X9HNvJIBMTftRSd3YzouS5nWSQYczpOlbGAnXVjEWZB8tMraeSG8Dfx/eQu/UeRUNUI7MkHfaWa1FPe473cO7JMlOPM6EJrObeTiaZADEk3ViCiEznrCc1o4f2h7eRT6YAmkypNJlSaTKlYlvGAk2mVGzJ/Hx/wQrd+fcEG5xwAcMUV/7vxqYmAAAAAElFTkSuQmCC" InformativeScreenshot="95deecf89bbc0e4e3f6ea3de16e3e827.png" ScopeSelectorArgument="&lt;wnd app='excel.exe' cls='XLMAIN' title='Copy of dE-calculations.xlsx - Excel' /&gt;" SearchSteps="Selector, FuzzySelector, Image" Version="V1" Visibility="Interactive" />
                </uix:NClick.Target>
              </uix:NClick>
            </Sequence>
          </ActivityAction>
        </ueab:ExcelApplicationCard.Body>
      </ueab:ExcelApplicationCard>
    </Sequence>
    <Sequence DisplayName="Group" sap:VirtualizedContainerService.HintSize="650.6666666666666,3471.3333333333335" sap2010:WorkflowViewState.IdRef="Sequence_17">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="588.6666666666666,86.66666666666667" sap2010:WorkflowViewState.IdRef="MessageBox_4" Text="[string.Format(&quot;Select the raw data file for SAMPLE colour ramp plot.&quot;)]" />
      <ui:SelectFile DisplayName="Browse For File" Filter="All files (*.*)|*.*" sap:VirtualizedContainerService.HintSize="588.6666666666666,141.33333333333334" sap2010:WorkflowViewState.IdRef="SelectFile_3" SelectedFile="[SelectedFile_from_Browse_For_File]" />
      <ui:GetFileInfoX DisplayName="Get File Info" FilePath="[SelectedFile_from_Browse_For_File]" sap:VirtualizedContainerService.HintSize="588.6666666666666,136.66666666666666" sap2010:WorkflowViewState.IdRef="GetFileInfoX_2" Output="[Output_to_from_Get_File_Info_2]" />
      <Assign DisplayName="Set Variable Value" sap:VirtualizedContainerService.HintSize="588.6666666666666,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_3">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[SampleSheet_Name]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Output_to_from_Get_File_Info_2.Name.Substring(0,9)]</InArgument>
        </Assign.Value>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Assign>
      <Assign DisplayName="Set Variable Value" sap:VirtualizedContainerService.HintSize="588.6666666666666,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_4">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[Sample]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[SelectedFile_from_Browse_For_File]</InArgument>
        </Assign.Value>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Assign>
      <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" AutoSave="False" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="588.6666666666666,912" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_5" ResizeWindow="None" WorkbookPath="[SelectedFile_from_Browse_For_File]">
        <ueab:ExcelApplicationCard.Body>
          <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="TextToColumn" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="486,631.3333333333334" sap2010:WorkflowViewState.IdRef="Sequence_13">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ueab:TextToColumnsX NumberOfCharactersPerColumn="{x:Null}" ConsecutiveOperatorsAsOne="True" DestinationRange="[TextToColumn.Sheet(SampleSheet_Name).Range(&quot;A1:A565&quot;)]" DisplayName="Text to Columns" sap:VirtualizedContainerService.HintSize="444,329.3333333333333" sap2010:WorkflowViewState.IdRef="TextToColumnsX_3" OtherSeparator="|" ParsingType="Delimited" SourceRange="[TextToColumn.Sheet(SampleSheet_Name).Range(&quot;A1:A565&quot;)]" SplitByComma="False" SplitByLineBreak="False" SplitByOther="True" SplitBySemicolon="True" SplitBySpace="True" SplitByTabs="True" TextQualifier="None" />
              <ueab:ReadRangeX DisplayName="Read Range" HasHeaders="False" sap:VirtualizedContainerService.HintSize="444,174.66666666666666" sap2010:WorkflowViewState.IdRef="ReadRangeX_2" Range="[TextToColumn.Sheet(SampleSheet_Name).Range(&quot;A25:G564&quot;)]" SaveTo="[ClipboardX.DataTableValue]" VisibleOnly="False" />
            </Sequence>
          </ActivityAction>
        </ueab:ExcelApplicationCard.Body>
      </ueab:ExcelApplicationCard>
      <ui:GetActiveWindow ApplicationWindow="{x:Null}" DisplayName="Get Active Window" sap:VirtualizedContainerService.HintSize="588.6666666666666,1673.3333333333333" sap2010:WorkflowViewState.IdRef="GetActiveWindow_1">
        <ui:GetActiveWindow.Body>
          <ActivityAction x:TypeArguments="x:Object">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="552,1593.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_15">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" AutoSave="False" CreateNewFile="False" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="510,1506" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_8" KeepExcelFileOpen="True" ResizeWindow="None" WorkbookPath="[string.Format(&quot;{0}\Downloads\Copy of dE-calculations.xlsx&quot;, Environment.GetFolderPath(Environment.SpecialFolder.UserProfile))]">
                <ueab:ExcelApplicationCard.Body>
                  <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="476,1225.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_19">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ueab:DuplicateSheetX DisplayName="Duplicate Sheet" sap:VirtualizedContainerService.HintSize="434,141.33333333333334" sap2010:WorkflowViewState.IdRef="DuplicateSheetX_4" NewSheetName="Sample1" SheetToDuplicate="[Excel.Sheet(&quot;Format&quot;)]" />
                      <ueab:CopyPasteRangeX DestinationRange="[Excel.Sheet(&quot;Sample1&quot;).Range(&quot;A1&quot;)]" DisplayName="Copy/Paste Range" sap:VirtualizedContainerService.HintSize="434,218.66666666666666" sap2010:WorkflowViewState.IdRef="CopyPasteRangeX_7" PasteOptions="All" SourceRange="[ExcelClipboardX.Value]" Transpose="False" />
                      <ueab:CopyPasteRangeX DestinationRange="[Excel.Sheet(&quot;dE&quot;).Range(&quot;B31:BE50&quot;)]" DisplayName="Copy/Paste Range" sap:VirtualizedContainerService.HintSize="434,218.66666666666666" sap2010:WorkflowViewState.IdRef="CopyPasteRangeX_8" PasteOptions="Values" SourceRange="[Excel.Sheet(&quot;Sample1&quot;).Range(&quot;K2:AT21&quot;)]" Transpose="False" />
                      <uix:NClick ClickType="Single" DisplayName="Click 'dE'" sap:VirtualizedContainerService.HintSize="434,159.33333333333334" sap2010:WorkflowViewState.IdRef="NClick_2" InScope="[Excel]" KeyModifiers="None" MouseButton="Left" ScopeIdentifier="Excel" Version="V3">
                        <uix:NClick.Target>
                          <uix:TargetAnchorable DesignTimeRectangle="129, 978, 47, 34" DesignTimeScaleFactor="1.5" FriendlyName="'dE'" FullSelectorArgument="&lt;uia automationid='Copy of dE-calculations.xlsx' cls='ExcelBookTabControl' name='Copy of dE-calculations' /&gt;&lt;uia automationid='SheetTab' name='dE' role='Sheet Tab' /&gt;" FuzzySelectorArgument="&lt;uia automationid='Copy of dE-calculations.xlsx' cls='ExcelBookTabControl' name='Copy of dE-calculations' /&gt;&lt;uia automationid='SheetTab' name='dE' role='Sheet Tab' check:fulltext='dE' /&gt;" Guid="27247cf4-d260-4f94-90ff-e31d9c3233e5" ImageBase64="iVBORw0KGgoAAAANSUhEUgAAADMAAAAmCAYAAABpuqMCAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAAFiUAABYlAUlSJPAAAAElSURBVFhH7ZZBjoMwDEW51nTuwz18DBZecgWr0kizZZlj5Bi/gaFDaN0KqiASK5behpDID+wkzTAMOIq+79XnR2FLpus6WKFp2xZWqDK58i8z1lw8UBL33KtMbhwvww5jOFbGEnOODAn89FQJL6B4/g5OlfFOwMwP0Hr+Ds6Vkc8T16gyOgQWF/WCD8kyqDwZgswWSx8I3GJWjgzNJquEJxZJTUaL5zW2k0BmTvjVlrpzNyOK3ttJAhnGlK5jZSxQVs9YlHlRZmo/5bwB/H18D3mq91k0RDEyS9LhbLk39XjmeA/n3pSZep0Jm8Bq7e0kkgkQQ+KDJYjIeM960zN6aH94G+lkMqDK5EqVyZUqkyu2ZSxQZXLFlsz35QtWaH5/rrDBFTcmlhVEO7fqngAAAABJRU5ErkJggg==" InformativeScreenshot="1f5c2ca41f58262efc53a56a64bfd803.png" ScopeSelectorArgument="&lt;wnd app='excel.exe' cls='XLMAIN' title='Copy of dE-calculations.xlsx - Excel' /&gt;" SearchSteps="Selector, FuzzySelector, Image" Version="V1" Visibility="Interactive" />
                        </uix:NClick.Target>
                      </uix:NClick>
                      <ueab:InsertExcelChartX InsertedChart="{x:Null}" ChartCategory="Bar" ChartHeight="211" ChartType="xlBarClustered" ChartWidth="355" DisplayName="Insert Chart" sap:VirtualizedContainerService.HintSize="434,240" sap2010:WorkflowViewState.IdRef="InsertExcelChartX_1" InsertIntoSheet="[Excel.Sheet(&quot;dE&quot;)]" Left="60" Range="[Excel.Sheet(&quot;dE&quot;).Range(&quot;$AP$9:$AP$189,dE!$AX$9:$AX$189&quot;)]" Top="20" />
                    </Sequence>
                  </ActivityAction>
                </ueab:ExcelApplicationCard.Body>
              </ueab:ExcelApplicationCard>
            </Sequence>
          </ActivityAction>
        </ui:GetActiveWindow.Body>
      </ui:GetActiveWindow>
    </Sequence>
  </ueab:SequenceX>
</Activity>